/*
This file is used to contain all vendor imports.
*/
/*! normalize-scss | MIT/GPLv2 License | bit.ly/normalize-scss */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in
 *    IE on Windows Phone and in iOS.
 */
@import url("https://fonts.googleapis.com/css?family=Nunito+Sans:400,600,700");
html {
  line-height: 1.15;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers (opinionated).
 */
body {
  margin: 0; }

/**
 * Add the correct display in IE 9-.
 */
article,
aside,
footer,
header,
nav,
section {
  display: block; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/* Grouping content
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 */
figcaption,
figure {
  display: block; }

/**
 * Add the correct margin in IE 8.
 */
figure {
  margin: 1em 40px; }

/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/**
 * Add the correct display in IE.
 */
main {
  display: block; }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre, code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Links
   ========================================================================== */
/**
 * 1. Remove the gray background on active links in IE 10.
 * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
 */
a {
  background-color: transparent;
  /* 1 */
  -webkit-text-decoration-skip: objects;
  /* 2 */ }

/* Text-level semantics
   ========================================================================== */
/**
 * 1. Remove the bottom border in Chrome 57- and Firefox 39-.
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
  /* 2 */ }

/**
 * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
 */
b,
strong {
  font-weight: inherit; }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * Add the correct font style in Android 4.3-.
 */
dfn {
  font-style: italic; }

/**
 * Add the correct background and color in IE 9-.
 */
mark {
  background-color: #ff0;
  color: #000; }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 */
audio,
video {
  display: inline-block; }

/**
 * Add the correct display in iOS 4-7.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Remove the border on images inside links in IE 10-.
 */
img {
  border-style: none; }

/**
 * Hide the overflow in IE.
 */
svg:not(:root) {
  overflow: hidden; }

/* Forms
   ========================================================================== */
/**
 * Known issues:
 * - `select`:
 *   By default, Chrome on OS X and Safari on OS X allow very limited styling of
 *   select, unless a border property is set. The default font weight on
 *   optgroup elements cannot safely be changed in Chrome on OSX and Safari on
 *   OS X.
 * - `[type="checkbox"]`:
 *   It is recommended that you do not style checkbox and radio inputs as
 *   Firefox's implementation does not respect box-sizing, padding, or width.
 * - `[type="number"]`:
 *   Certain font size values applied to number inputs cause the cursor style of
 *   the decrement button to change from `default` to `text`.
 * - `[type="search"]`:
 *   The search input is not fully stylable by default. In Chrome and Safari on
 *   OSX/iOS you can't control `font`, `padding`, `border`, or `background`. In
 *   Chrome and Safari on Windows you can't control `border` properly. It will
 *   apply `border-width` but will only show a border color (which cannot be
 *   controlled) for the outer 1px of that border. Applying
 *   `-webkit-appearance: textfield` addresses these issues without removing the
 *   benefits of search inputs (e.g. showing past searches). Safari (but not
 *   Chrome) will clip the cancel button on when it has padding (and `textfield`
 *   appearance).
 * - `::placeholder`:
 *   In Edge, placeholders will disappear on `relative` or `absolute` positioned
 *   `<input>` elements if you use `opacity` less than `1` due to a
 *   [bug](https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/3901363/).
 */
/**
 * 1. Change the font styles in all browsers (opinionated).
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  line-height: 1.15;
  /* 1 */
  font-family: sans-serif;
  /* 1 */
  font-size: 100%;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Show the overflow in IE.
 */
button {
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
 *    controls in Android 4.
 * 2. Correct the inability to style clickable types in iOS and Safari.
 */
button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  /* 2 */ }

button,
[type="button"],
[type="reset"],
[type="submit"] {
  /**
   * Remove the inner border and padding in Firefox.
   */
  /**
   * Restore the focus styles unset by the previous rule.
   */ }
  button::-moz-focus-inner,
  [type="button"]::-moz-focus-inner,
  [type="reset"]::-moz-focus-inner,
  [type="submit"]::-moz-focus-inner {
    border-style: none;
    padding: 0; }
  button:-moz-focusring,
  [type="button"]:-moz-focusring,
  [type="reset"]:-moz-focusring,
  [type="submit"]:-moz-focusring {
    outline: 1px dotted ButtonText; }

/**
 * Show the overflow in Edge.
 */
input {
  overflow: visible; }

/**
 * 1. Add the correct box sizing in IE 10-.
 * 2. Remove the padding in IE 10-.
 */
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
  /**
   * Remove the inner padding and cancel buttons in Chrome and Safari on macOS.
   */ }
  [type="search"]::-webkit-search-cancel-button, [type="search"]::-webkit-search-decoration {
    -webkit-appearance: none; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box;
  /* 1 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  color: inherit;
  /* 2 */
  white-space: normal;
  /* 1 */ }

/**
 * 1. Add the correct display in IE 9-.
 * 2. Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Remove the default vertical scrollbar in IE.
 */
textarea {
  overflow: auto; }

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE, and Firefox.
 */
details {
  display: block; }

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item; }

/*
 * Add the correct display in IE 9-.
 */
menu {
  display: block; }

/* Scripting
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 */
canvas {
  display: inline-block; }

/**
 * Add the correct display in IE.
 */
template {
  display: none; }

/* Hidden
   ========================================================================== */
/**
 * Add the correct display in IE 10-.
 */
[hidden] {
  display: none; }

/*8.0.0*/
/*
This file is used to contain all abstracts imports.
Files inside this folder can contain abstract settings, helpers or functions. They have no direct output.
*/
/*
This file is used to contain all base imports.
Files inside this folder can contain global styles used in the project.
*/
*, *::after, *::before {
  box-sizing: border-box; }

/* make sticky footer  -- start */
html, body {
  height: 100%; }

body {
  display: flex;
  flex-direction: column; }

.content {
  flex: 1 0 auto; }

.footer {
  flex-shrink: 0; }

/* make sticky footer  -- end */
img {
  max-width: 100%;
  height: auto; }

a {
  text-decoration: none; }

ul {
  list-style: none; }

body {
  font-family: "Nunito Sans", sans-serif; }

/*
This file is used to contain all component imports.
Files inside this folder should contain all styles relating to a reusable component.
*/
.btn {
  color: white; }
  .btn--contact {
    background-color: black;
    padding: 0.625rem 1.875rem;
    margin: 11px 0px 50px 0px;
    border: 1px solid black;
    cursor: pointer;
    width: 100%;
    transition: background-color .3s ease-out; }
    @media (min-width: 768px) {
      .btn--contact {
        width: 25%; } }
  .btn--contact:hover {
    background-color: white;
    color: black; }

.container {
  max-width: 315px;
  margin: 0 auto;
  padding: 0 11px; }
  @media screen and (min-width: 400px) {
    .container {
      max-width: 1200px;
      padding: 0 18px; } }

.heading--section {
  color: #979797;
  text-align: center;
  font-size: 0.75rem;
  letter-spacing: 3px;
  text-transform: uppercase;
  margin-bottom: 11px; }
  @media screen and (min-width: 700px) {
    .heading--section {
      text-align: left;
      margin-bottom: 8px; } }

@media screen and (max-width: 767px) {
  .heading--projects {
    text-align: center;
    margin-bottom: 20px; } }

@media screen and (min-width: 1024px) {
  .heading--projects {
    margin-bottom: 20px; } }

.heading--about {
  font-size: 1.125rem;
  font-weight: 700;
  text-transform: uppercase;
  margin-top: 8px;
  line-height: 25px; }

.heading--technologies {
  font-size: 1.125rem;
  font-weight: 700;
  text-transform: uppercase;
  margin-top: -9px;
  line-height: 25px; }
  @media screen and (min-width: 800px) {
    .heading--technologies {
      margin-top: -20px; } }

.heading--contact {
  font-size: calc(1.5625rem + 0.625 * ((100vw - 26.25rem) / 53.75));
  font-weight: 700;
  text-transform: uppercase;
  margin-top: 40px; }

@media screen and (min-width: 1280px){
  .heading--contact{
    font-size: 2.1875rem; } }

@media screen and (max-width: 420px){
  .heading--contact{
    font-size: 1.5625rem; } }
  @media screen and (min-width: 768px) {
    .heading--contact {
      margin-bottom: -10px; } }

/*
This file is used to contain all component imports.
Files inside this folder can contain specific element styles and layout.
*/
.navigation {
  position: fixed;
  top: 0;
  bottom: 0;
  left: 0;
  right: 30%;
  z-index: 3;
  transform: translateX(-100%);
  transition: transform ease-out 350ms; }
  @media screen and (min-width: 800px) {
    .navigation {
      position: static;
      transform: none; } }
  .navigation-is-open nav {
    transform: translateX(0); }
    @media screen and (min-width: 800px) {
      .navigation-is-open nav {
        transform: none; } }
  .navigation ul {
    margin: 0;
    padding: 0;
    display: flex;
    flex-direction: column;
    height: 101vh;
    justify-content: center;
    background: white;
    border: 1px solid #ededed; }
    @media screen and (min-width: 800px) {
      .navigation ul {
        justify-content: flex-end;
        align-items: center;
        flex-direction: row;
        background: none;
        border: none;
        height: auto; } }
  .navigation li {
    text-align: center; }
    @media screen and (min-width: 800px) {
      .navigation li {
        border-bottom: none;
        margin-left: 30px; } }
  .navigation a {
    display: inline-block;
    font-size: 1rem 1.375rem;
    color: #979797;
    text-transform: uppercase;
    letter-spacing: 2px;
    padding: 20px 0;
    width: 100%; }
    @media screen and (min-width: 800px) {
      .navigation a {
        display: inline;
        color: #979797;
        font-size: 0.6875rem;
        font-weight: 600;
        letter-spacing: 3px;
        width: 62px;
        height: 16px;
        text-transform: uppercase;
        padding: 0;
        transition: .3s ease-out; }
        .navigation a:hover {
          color: black; } }

@media screen and (min-width: 800px) {
  .header {
    position: fixed;
    top: 0;
    background-color: white;
    border-bottom: 1px solid #F6F4F4;
    width: 100%;
    z-index: 1;
    height: 75px; } }

.header__mobile-menu-container {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding-top: 20px; }
  @media screen and (min-width: 800px) {
    .header__mobile-menu-container {
      display: none; } }

.header__container {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding-top: 12px; }

.header__name {
  color: black;
  font-size: calc(1.25rem + 0.3125 * ((100vw - 26.25rem) / 53.75));
  text-transform: uppercase; }

@media screen and (min-width: 1280px){
  .header__name{
    font-size: 1.5625rem; } }

@media screen and (max-width: 420px){
  .header__name{
    font-size: 1.25rem; } }

.header__menu-icon {
  width: 20px;
  height: 19px;
  position: fixed;
  top: 25px;
  right: 23px;
  z-index: 3; }
  .header__menu-icon::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 30px;
    height: 3px;
    background-color: black;
    transform-origin: 0 0;
    transition: transform .3s ease-out; }
  .header__menu-icon--middle {
    position: absolute;
    top: 8px;
    left: 0;
    width: 30px;
    height: 3px;
    background-color: black;
    transition: all .3s ease-out;
    transform-origin: 0 50%; }
  .header__menu-icon::after {
    content: "";
    position: absolute;
    bottom: 0;
    left: 0;
    width: 30px;
    height: 3px;
    background-color: black;
    transform-origin: 0 100%;
    transition: transform .3s ease-out; }
  @media screen and (min-width: 800px) {
    .header__menu-icon {
      display: none; } }

.header__menu-icon--close-x::before {
  transform: rotate(45deg) translateY(-3px); }

.header__menu-icon--close-x .header__menu-icon--middle {
  opacity: 0;
  transform: scaleX(0); }

.header__menu-icon--close-x::after {
  transform: rotate(-45deg) translateY(3px); }

.intro__container {
  padding: 50px 0px 20px 0px; }
  @media screen and (min-width: 800px) {
    .intro__container {
      padding: 175px 0px 70px 0px; } }

.intro__heading {
  font-size: calc(1.125rem + 2 * ((100vw - 26.25rem) / 53.75));
  font-weight: 700;
  text-transform: uppercase;
  width: 283px;
  margin-bottom: 5px;
  margin-top: 0; }

@media screen and (min-width: 1280px){
  .intro__heading{
    font-size: 3.125rem; } }

@media screen and (max-width: 420px){
  .intro__heading{
    font-size: 1.125rem; } }
  @media screen and (min-width: 400px) {
    .intro__heading {
      width: 100%; } }

.intro__description {
  color: #979797;
  line-height: 25px;
  font-size: calc(1rem + 0.1875 * ((100vw - 26.25rem) / 53.75)); }

@media screen and (min-width: 1280px){
  .intro__description{
    font-size: 1.1875rem; } }

@media screen and (max-width: 420px){
  .intro__description{
    font-size: 1rem; } }

.projects__wrapper {
  padding: 0px 50px 0px 50px;
  display: flex;
  flex-wrap: wrap;
  margin-right: -15px;
  margin-left: -15px; }
  @media (min-width: 768px) {
    .projects__wrapper {
      margin-right: -19px;
      margin-left: -94px; } }
  @media (min-width: 1024px) {
    .projects__wrapper {
      margin-left: -16%;
      padding: 0; } }

.projects__single-item {
  flex: 0 0 100%;
  max-width: 100%; }
  @media (min-width: 768px) {
    .projects__single-item {
      flex: 0 0 50%;
      max-width: 100%;
      padding-left: 46px; } }
  @media (min-width: 1024px) {
    .projects__single-item {
      padding-left: 14%; } }

.projects__item {
  position: relative;
  margin-bottom: 150px;
  z-index: 0;
  border: 1px solid #F6F4F4; }
  @media (max-width: 1024px) {
    .projects__item {
      margin-bottom: 80px; } }
  @media (max-width: 768px) {
    .projects__item {
      margin-bottom: 50px; } }

.projects__item img {
  width: 100%; }

.projects__item .projects__info {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  background-color: black;
  padding-right: 44px;
  padding-left: 10px; }

.projects__item .projects__info .projects__company {
  font-size: calc(1.375rem + 0.875 * ((100vw - 26.25rem) / 53.75));
  line-height: calc(28px + 12 * ((100vw - 420px) / 860));
  color: white;
  font-weight: 700;
  margin-bottom: 0; }

@media screen and (min-width: 1280px){
  .projects__item .projects__info .projects__company{
    line-height: 40px; } }

@media screen and (max-width: 420px){
  .projects__item .projects__info .projects__company{
    line-height: 28px; } }

@media screen and (min-width: 1280px){
  .projects__item .projects__info .projects__company{
    font-size: 2.25rem; } }

@media screen and (max-width: 420px){
  .projects__item .projects__info .projects__company{
    font-size: 1.375rem; } }

.projects__item .projects__info .projects__email-type {
  text-transform: uppercase;
  font-size: calc(0.625rem + 0.125 * ((100vw - 26.25rem) / 53.75));
  letter-spacing: 2px;
  line-height: 18px;
  color: yellow;
  margin-top: 5px; }

@media screen and (min-width: 1280px){
  .projects__item .projects__info .projects__email-type{
    font-size: 0.75rem; } }

@media screen and (max-width: 420px){
  .projects__item .projects__info .projects__email-type{
    font-size: 0.625rem; } }

.projects__item .projects__ve {
  position: absolute;
  right: -40px;
  bottom: 70px;
  color: black;
  font-size: 12px;
  transition: all 0.3s;
  text-transform: uppercase; }
  @media (min-width: 768px) {
    .projects__item .projects__ve {
      right: -50px; } }
  @media (min-width: 1024px) {
    .projects__item .projects__ve {
      right: -40px; } }
  @media (min-width: 1262px) {
    .projects__item .projects__ve {
      right: -139px; } }

.projects__item .projects__ve:before {
  position: absolute;
  content: "";
  top: 50%;
  height: 1px;
  width: 62px;
  background: black;
  left: -62px;
  transition: all 0.3s; }

.projects__item .projects__ve:after {
  position: absolute;
  content: "";
  top: 0;
  height: 0;
  width: 1px;
  background: black;
  left: 0;
  transition: all 0.1s linear;
  transition-delay: 0.1s; }

.projects__item .projects__ve:hover:after {
  height: 50%;
  transition-delay: 0.6s; }

.projects__item .projects__ve span {
  display: inline-block;
  position: relative; }

.projects__item .projects__ve span.projects__ve_hover {
  padding: 5px 20px; }
  @media (max-width: 767px) {
    .projects__item .projects__ve span.projects__ve_hover {
      padding: 5px 8px; } }

.projects__item .projects__ve span.projects__ve_inner:before,
.projects__item .projects__ve span.projects__ve_inner:after {
  content: "";
  width: 0;
  height: 1px;
  position: absolute;
  background: black;
  transition: all 0.2s linear; }

.projects__item .projects__ve span.projects__ve_inner:after {
  left: 0px;
  bottom: 0px;
  transition-delay: 0.4s; }

.projects__item .projects__ve span.projects__ve_inner:before {
  right: 0px;
  top: 0px;
  transition-delay: 0.2s; }

.projects__item .projects__ve span.projects__ve_hover:before,
.projects__item .projects__ve span.projects__ve_hover:after {
  content: "";
  width: 1px;
  height: 0;
  position: absolute;
  transition: all 0.2s linear;
  background: black; }

.projects__item .projects__ve span.projects__ve_hover:before {
  left: 0;
  top: 50%;
  transition-delay: 0.6s; }

.projects__item .projects__ve span.projects__ve_hover:after {
  right: 0;
  bottom: 1px;
  transition-delay: 0.2s; }

.projects__item .projects__ve span.projects__ve_hover:after {
  bottom: 0; }

.projects__item .projects__ve:hover span.projects__ve_inner:before,
.projects__item .projects__ve:hover span.projects__ve_inner:after {
  width: 100%; }

.projects__item .projects__ve:hover span.projects__ve_inner:before {
  transition-delay: 0.4s; }

.projects__item .projects__ve:hover span.projects__ve_inner:after {
  transition-delay: 0.2s; }

.projects__item .projects__ve:hover span.projects__ve_hover:before {
  transition-delay: 0s; }

.projects__item .projects__ve:hover span.projects__ve_hover:after {
  height: calc(100% - 1px); }

.projects__item .projects__ve:hover span.projects__ve_hover:before {
  height: calc(50% - 1px); }

.projects__item .projects__vc {
  position: absolute;
  right: -40px;
  bottom: 20px;
  color: black;
  font-size: 12px;
  transition: all 0.3s;
  text-transform: uppercase; }
  @media (min-width: 768px) {
    .projects__item .projects__vc {
      right: -50px; } }
  @media (min-width: 1024px) {
    .projects__item .projects__vc {
      right: -40px; } }
  @media (min-width: 1262px) {
    .projects__item .projects__vc {
      right: -123px; } }

.projects__item .projects__vc:before {
  position: absolute;
  content: "";
  top: 50%;
  height: 1px;
  width: 62px;
  background: black;
  left: -62px;
  transition: all 0.3s; }

.projects__item .projects__vc:after {
  position: absolute;
  content: "";
  top: 0;
  height: 0;
  width: 1px;
  background: black;
  left: 0;
  transition: all 0.1s linear;
  transition-delay: 0.1s; }

.projects__item .projects__vc:hover:after {
  height: 50%;
  transition-delay: 0.6s; }

.projects__item .projects__vc span {
  display: inline-block;
  position: relative; }

.projects__item .projects__vc span.projects__vc_hover {
  padding: 5px 20px; }
  @media (max-width: 767px) {
    .projects__item .projects__vc span.projects__vc_hover {
      padding: 5px 8px; } }

.projects__item .projects__vc span.projects__vc_inner:before,
.projects__item .projects__vc span.projects__vc_inner:after {
  content: "";
  width: 0;
  height: 1px;
  position: absolute;
  background: black;
  transition: all 0.2s linear; }

.projects__item .projects__vc span.projects__vc_inner:after {
  left: 0px;
  bottom: 0px;
  transition-delay: 0.4s; }

.projects__item .projects__vc span.projects__vc_inner:before {
  right: 0px;
  top: 0px;
  transition-delay: 0.2s; }

.projects__item .projects__vc span.projects__vc_hover:before,
.projects__item .projects__vc span.projects__vc_hover:after {
  content: "";
  width: 1px;
  height: 0;
  position: absolute;
  transition: all 0.2s linear;
  background: black; }

.projects__item .projects__vc span.projects__vc_hover:before {
  left: 0;
  top: 50%;
  transition-delay: 0.6s; }

.projects__item .projects__vc span.projects__vc_hover:after {
  right: 0;
  bottom: 1px;
  transition-delay: 0.2s; }

.projects__item .projects__vc span.projects__vc_hover:after {
  bottom: 0; }

.projects__item .projects__vc:hover span.projects__vc_inner:before,
.projects__item .projects__vc:hover span.projects__vc_inner:after {
  width: 100%; }

.projects__item .projects__vc:hover span.projects__vc_inner:before {
  transition-delay: 0.4s; }

.projects__item .projects__vc:hover span.projects__vc_inner:after {
  transition-delay: 0.2s; }

.projects__item .projects__vc:hover span.projects__vc_hover:before {
  transition-delay: 0s; }

.projects__item .projects__vc:hover span.projects__vc_hover:after {
  height: calc(100% - 1px); }

.projects__item .projects__vc:hover span.projects__vc_hover:before {
  height: calc(50% - 1px); }

@media screen and (min-width: 768px) {
  .about {
    padding: 0.3125rem 0;
    margin-top: -20px; } }

@media screen and (min-width: 1024px) {
  .about {
    margin-top: -25px; } }

@media screen and (min-width: 1028px) {
  .about {
    margin-top: -90px; } }

.about__bio {
  font-weight: 600;
  line-height: 30px;
  margin-bottom: 30px;
  margin-top: -7px; }
  @media screen and (min-width: 700px) {
    .about__bio {
      margin-bottom: 50px; } }

.about__skills {
  display: flex;
  flex-direction: column;
  padding: 0px 5px 15px 5px; }
  @media screen and (min-width: 700px) {
    .about__skills {
      flex-direction: row;
      justify-content: space-between; } }

.about__technologies {
  font-weight: 700;
  text-transform: uppercase;
  text-align: center; }

.about ul {
  margin: -11px 0 0 0;
  padding: 0;
  text-align: center; }

.about li {
  margin-bottom: 15px; }

.contact {
  border-top: 1px solid #F6F4F4;
  padding: 0px 5px 0px 5px; }
  @media screen and (min-width: 768px) {
    .contact {
      padding: 0.6875rem 0.625rem; } }
  .contact__text-content {
    font-weight: 600;
    margin-top: -10px; }
    @media screen and (min-width: 768px) {
      .contact__text-content {
        margin-top: 7px; } }
  .contact__form {
    position: relative;
    padding: 18px 0px;
    margin-top: 10px; }
  .contact__field {
    font-family: inherit;
    width: 100%;
    border: 0;
    border-bottom: 1px solid #D2D2D2;
    outline: 0;
    font-size: 1rem;
    padding: 11px 0;
    background: transparent;
    transition: border-color 0.2s; }
  .contact__textarea {
    font-family: inherit;
    width: 100%;
    border: 0;
    border-bottom: 1px solid #D2D2D2;
    outline: 0;
    font-size: 1rem;
    padding: 7px 0;
    resize: none;
    background: transparent;
    transition: border-color 0.2s; }
    @media screen and (min-width: 1052px) {
      .contact__textarea {
        width: 100%; } }
    @media screen and (min-width: 1298px) {
      .contact__textarea {
        width: 743px; } }
  .contact__field::-webkit-input-placeholder, .contact__textarea::-webkit-input-placeholder {
    color: transparent; }
  .contact__field::-moz-placeholder, .contact__textarea::-moz-placeholder {
    color: transparent; }
  .contact__field:-ms-input-placeholder, .contact__textarea:-ms-input-placeholder {
    color: transparent; }
  .contact__field::-ms-input-placeholder, .contact__textarea::-ms-input-placeholder {
    color: transparent; }
  .contact__field::placeholder, .contact__textarea::placeholder {
    color: transparent; }
  .contact__field:placeholder-shown ~ .contact__label,
  .contact__textarea:placeholder-shown ~ .contact__label {
    font-size: 1rem;
    cursor: text;
    top: 20px; }
  .contact__field:focus ~ .contact__label,
  .contact__textarea:focus ~ .contact__label,
  .contact label {
    position: absolute;
    top: 0;
    display: block;
    transition: 0.2s;
    font-size: 0.75rem;
    color: #979797; }
  .contact__field:focus ~ .contact__label,
  .contact__textarea:focus ~ .contact__label {
    color: black; }
  .contact__field:focus, .contact__textarea:focus {
    border-bottom: 1px solid black; }
  .contact [type='submit'] {
    font-family: "Nunito Sans", sans-serif; }
  @media screen and (min-width: 1052px) {
    .contact__wrapper {
      display: flex;
      justify-content: space-around; } }

@media screen and (min-width: 1052px) and (max-width: 1300px) {
  .contact__wrapper {
    flex-direction: column; } }
  @media screen and (min-width: 1052px) {
    .contact__text-content {
      margin-right: 80px;
      line-height: 22px; }
      .contact__text-content p {
        margin-bottom: 9px; } }
  .contact__social-media {
    margin-bottom: 5px; }
    .contact__social-media a:nth-child(2) {
      margin-left: 11px; }

.footer__name {
  font-size: 0.625rem;
  text-align: center;
  font-weight: 600;
  text-transform: uppercase; }
  .footer__name a {
    color: #007fff; }

.footer__heart {
  display: inline-block;
  margin-bottom: -7px; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
