/*! normalize-scss | MIT/GPLv2 License | bit.ly/normalize-scss */@import url(https://fonts.googleapis.com/css?family=Nunito+Sans:400,600,700);html{line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,footer,header,nav,section{display:block}h1{font-size:2em;margin:.67em 0}figcaption,figure{display:block}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible}main{display:block}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}a{background-color:transparent;-webkit-text-decoration-skip:objects}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:inherit}b,strong{font-weight:bolder}dfn{font-style:italic}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}audio,video{display:inline-block}audio:not([controls]){display:none;height:0}img{border-style:none}svg:not(:root){overflow:hidden}button,input,optgroup,select,textarea{line-height:1.15;font-family:sans-serif;font-size:100%;margin:0}button{overflow:visible}button,select{text-transform:none}[type=reset],[type=submit],button,html [type=button]{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}input{overflow:visible}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;display:table;max-width:100%;padding:0;color:inherit;white-space:normal}progress{display:inline-block;vertical-align:baseline}textarea{overflow:auto}details{display:block}summary{display:list-item}menu{display:block}canvas{display:inline-block}template{display:none}[hidden]{display:none}*,::after,::before{box-sizing:border-box}body,html{height:100%}body{display:flex;flex-direction:column}.content{flex:1 0 auto}.footer{flex-shrink:0}img{max-width:100%;height:auto}a{text-decoration:none}ul{list-style:none}body{font-family:"Nunito Sans",sans-serif}.btn{color:#fff}.btn--contact{background-color:#000;padding:.625rem 1.875rem;margin:11px 0 50px 0;border:1px solid #000;cursor:pointer;width:100%;transition:background-color .3s ease-out}@media (min-width:768px){.btn--contact{width:25%}}.btn--contact:hover{background-color:#fff;color:#000}.container{max-width:315px;margin:0 auto;padding:0 11px}@media screen and (min-width:400px){.container{max-width:1200px;padding:0 18px}}.heading--section{color:#979797;text-align:center;font-size:.75rem;letter-spacing:3px;text-transform:uppercase;margin-bottom:11px}@media screen and (min-width:700px){.heading--section{text-align:left;margin-bottom:8px}}@media screen and (max-width:767px){.heading--projects{text-align:center;margin-bottom:20px}}@media screen and (min-width:1024px){.heading--projects{margin-bottom:20px}}.heading--about{font-size:1.125rem;font-weight:700;text-transform:uppercase;margin-top:8px;line-height:25px}.heading--technologies{font-size:1.125rem;font-weight:700;text-transform:uppercase;margin-top:-9px;line-height:25px}@media screen and (min-width:800px){.heading--technologies{margin-top:-20px}}.heading--contact{font-size:calc(1.5625rem + .625 * ((100vw - 26.25rem)/ 53.75));font-weight:700;text-transform:uppercase;margin-top:40px}@media screen and (min-width:1280px){.heading--contact{font-size:2.1875rem}}@media screen and (max-width:420px){.heading--contact{font-size:1.5625rem}}@media screen and (min-width:768px){.heading--contact{margin-bottom:-10px}}.navigation{position:fixed;top:0;bottom:0;left:0;right:30%;z-index:3;transform:translateX(-100%);transition:transform ease-out 350ms}@media screen and (min-width:800px){.navigation{position:static;transform:none}}.navigation-is-open nav{transform:translateX(0)}@media screen and (min-width:800px){.navigation-is-open nav{transform:none}}.navigation ul{margin:0;padding:0;display:flex;flex-direction:column;height:101vh;justify-content:center;background:#fff;border:1px solid #ededed}@media screen and (min-width:800px){.navigation ul{justify-content:flex-end;align-items:center;flex-direction:row;background:0 0;border:none;height:auto}}.navigation li{text-align:center}@media screen and (min-width:800px){.navigation li{border-bottom:none;margin-left:30px}}.navigation a{display:inline-block;font-size:1rem 1.375rem;color:#979797;text-transform:uppercase;letter-spacing:2px;padding:20px 0;width:100%}@media screen and (min-width:800px){.navigation a{display:inline;color:#979797;font-size:.6875rem;font-weight:600;letter-spacing:3px;width:62px;height:16px;text-transform:uppercase;padding:0;transition:.3s ease-out}.navigation a.active{color:#000}}@media screen and (min-width:800px){.header{position:fixed;top:0;background-color:#fff;border-bottom:1px solid #f6f4f4;width:100%;z-index:1}}.header__mobile-menu-container{display:flex;align-items:center;justify-content:space-between;padding-top:20px}@media screen and (min-width:800px){.header__mobile-menu-container{display:none}}.header__container{display:flex;justify-content:space-between;align-items:center;padding-top:10px}.header__name{color:#000;font-size:calc(1.25rem + .125 * ((100vw - 26.25rem)/ 53.75));text-transform:uppercase}@media screen and (min-width:1280px){.header__name{font-size:1.375rem}}@media screen and (max-width:420px){.header__name{font-size:1.25rem}}.header__menu-icon{width:20px;height:19px;position:fixed;top:25px;right:23px;z-index:3}.header__menu-icon::before{content:"";position:absolute;top:0;left:0;width:30px;height:3px;background-color:#000;transform-origin:0 0;transition:transform .3s ease-out}.header__menu-icon--middle{position:absolute;top:8px;left:0;width:30px;height:3px;background-color:#000;transition:all .3s ease-out;transform-origin:0 50%}.header__menu-icon::after{content:"";position:absolute;bottom:0;left:0;width:30px;height:3px;background-color:#000;transform-origin:0 100%;transition:transform .3s ease-out}@media screen and (min-width:800px){.header__menu-icon{display:none}}.header__menu-icon--close-x::before{transform:rotate(45deg) translateY(-3px)}.header__menu-icon--close-x .header__menu-icon--middle{opacity:0;transform:scaleX(0)}.header__menu-icon--close-x::after{transform:rotate(-45deg) translateY(3px)}.intro__container{padding:50px 0 20px 0}@media screen and (min-width:800px){.intro__container{padding:130px 0 70px 0}}.intro__heading{font-size:calc(1.125rem + 2 * ((100vw - 26.25rem)/ 53.75));font-weight:700;text-transform:uppercase;width:283px;margin-bottom:5px;margin-top:0}@media screen and (min-width:1280px){.intro__heading{font-size:3.125rem}}@media screen and (max-width:420px){.intro__heading{font-size:1.125rem}}@media screen and (min-width:400px){.intro__heading{width:100%}}.intro__description{color:#979797;line-height:25px;font-size:calc(1rem + .1875 * ((100vw - 26.25rem)/ 53.75))}@media screen and (min-width:1280px){.intro__description{font-size:1.1875rem}}@media screen and (max-width:420px){.intro__description{font-size:1rem}}.projects__wrapper{padding:0 50px 0 50px;display:flex;flex-wrap:wrap;margin-right:-15px;margin-left:-15px}@media (min-width:768px){.projects__wrapper{margin-right:-19px;margin-left:-94px}}@media (min-width:1024px){.projects__wrapper{margin-left:-16%;padding:0}}.projects__single-item{flex:0 0 100%;max-width:100%}@media (min-width:768px){.projects__single-item{flex:0 0 50%;max-width:100%;padding-left:46px}}@media (min-width:1024px){.projects__single-item{padding-left:14%}}.projects__item{position:relative;margin-bottom:150px;z-index:0;border:1px solid #ededed}@media (max-width:1024px){.projects__item{margin-bottom:80px}}@media (max-width:768px){.projects__item{margin-bottom:50px}}.projects__item img{width:100%}.projects__item .projects__info{position:absolute;top:50%;transform:translateY(-50%);background-color:#000;padding-right:44px;padding-left:10px}.projects__item .projects__info .projects__company{font-size:calc(1.375rem + .875 * ((100vw - 26.25rem)/ 53.75));line-height:calc(28px + 12 * ((100vw - 420px)/ 860));color:#fff;font-weight:700;margin-bottom:0}@media screen and (min-width:1280px){.projects__item .projects__info .projects__company{line-height:40px}}@media screen and (max-width:420px){.projects__item .projects__info .projects__company{line-height:28px}}@media screen and (min-width:1280px){.projects__item .projects__info .projects__company{font-size:2.25rem}}@media screen and (max-width:420px){.projects__item .projects__info .projects__company{font-size:1.375rem}}.projects__item .projects__info .projects__email-type{text-transform:uppercase;font-size:calc(.625rem + .125 * ((100vw - 26.25rem)/ 53.75));letter-spacing:2px;line-height:18px;color:#ff0;margin-top:5px}@media screen and (min-width:1280px){.projects__item .projects__info .projects__email-type{font-size:.75rem}}@media screen and (max-width:420px){.projects__item .projects__info .projects__email-type{font-size:.625rem}}.projects__item .projects__ve{position:absolute;right:-40px;bottom:70px;color:#000;font-size:12px;transition:all .3s;text-transform:uppercase}@media (min-width:768px){.projects__item .projects__ve{right:-50px}}@media (min-width:1024px){.projects__item .projects__ve{right:-40px}}@media (min-width:1262px){.projects__item .projects__ve{right:-139px}}.projects__item .projects__ve:before{position:absolute;content:"";top:50%;height:1px;width:62px;background:#000;left:-62px;transition:all .3s}.projects__item .projects__ve:after{position:absolute;content:"";top:0;height:0;width:1px;background:#000;left:0;transition:all .1s linear;transition-delay:.1s}.projects__item .projects__ve:hover:after{height:50%;transition-delay:.6s}.projects__item .projects__ve span{display:inline-block;position:relative}.projects__item .projects__ve span.projects__ve_hover{padding:5px 20px}@media (max-width:767px){.projects__item .projects__ve span.projects__ve_hover{padding:5px 8px}}.projects__item .projects__ve span.projects__ve_inner:after,.projects__item .projects__ve span.projects__ve_inner:before{content:"";width:0;height:1px;position:absolute;background:#000;transition:all .2s linear}.projects__item .projects__ve span.projects__ve_inner:after{left:0;bottom:0;transition-delay:.4s}.projects__item .projects__ve span.projects__ve_inner:before{right:0;top:0;transition-delay:.2s}.projects__item .projects__ve span.projects__ve_hover:after,.projects__item .projects__ve span.projects__ve_hover:before{content:"";width:1px;height:0;position:absolute;transition:all .2s linear;background:#000}.projects__item .projects__ve span.projects__ve_hover:before{left:0;top:50%;transition-delay:.6s}.projects__item .projects__ve span.projects__ve_hover:after{right:0;bottom:1px;transition-delay:.2s}.projects__item .projects__ve span.projects__ve_hover:after{bottom:0}.projects__item .projects__ve:hover span.projects__ve_inner:after,.projects__item .projects__ve:hover span.projects__ve_inner:before{width:100%}.projects__item .projects__ve:hover span.projects__ve_inner:before{transition-delay:.4s}.projects__item .projects__ve:hover span.projects__ve_inner:after{transition-delay:.2s}.projects__item .projects__ve:hover span.projects__ve_hover:before{transition-delay:0s}.projects__item .projects__ve:hover span.projects__ve_hover:after{height:calc(100% - 1px)}.projects__item .projects__ve:hover span.projects__ve_hover:before{height:calc(50% - 1px)}.projects__item .projects__vc{position:absolute;right:-40px;bottom:20px;color:#000;font-size:12px;transition:all .3s;text-transform:uppercase}@media (min-width:768px){.projects__item .projects__vc{right:-50px}}@media (min-width:1024px){.projects__item .projects__vc{right:-40px}}@media (min-width:1262px){.projects__item .projects__vc{right:-123px}}.projects__item .projects__vc:before{position:absolute;content:"";top:50%;height:1px;width:62px;background:#000;left:-62px;transition:all .3s}.projects__item .projects__vc:after{position:absolute;content:"";top:0;height:0;width:1px;background:#000;left:0;transition:all .1s linear;transition-delay:.1s}.projects__item .projects__vc:hover:after{height:50%;transition-delay:.6s}.projects__item .projects__vc span{display:inline-block;position:relative}.projects__item .projects__vc span.projects__vc_hover{padding:5px 20px}@media (max-width:767px){.projects__item .projects__vc span.projects__vc_hover{padding:5px 8px}}.projects__item .projects__vc span.projects__vc_inner:after,.projects__item .projects__vc span.projects__vc_inner:before{content:"";width:0;height:1px;position:absolute;background:#000;transition:all .2s linear}.projects__item .projects__vc span.projects__vc_inner:after{left:0;bottom:0;transition-delay:.4s}.projects__item .projects__vc span.projects__vc_inner:before{right:0;top:0;transition-delay:.2s}.projects__item .projects__vc span.projects__vc_hover:after,.projects__item .projects__vc span.projects__vc_hover:before{content:"";width:1px;height:0;position:absolute;transition:all .2s linear;background:#000}.projects__item .projects__vc span.projects__vc_hover:before{left:0;top:50%;transition-delay:.6s}.projects__item .projects__vc span.projects__vc_hover:after{right:0;bottom:1px;transition-delay:.2s}.projects__item .projects__vc span.projects__vc_hover:after{bottom:0}.projects__item .projects__vc:hover span.projects__vc_inner:after,.projects__item .projects__vc:hover span.projects__vc_inner:before{width:100%}.projects__item .projects__vc:hover span.projects__vc_inner:before{transition-delay:.4s}.projects__item .projects__vc:hover span.projects__vc_inner:after{transition-delay:.2s}.projects__item .projects__vc:hover span.projects__vc_hover:before{transition-delay:0s}.projects__item .projects__vc:hover span.projects__vc_hover:after{height:calc(100% - 1px)}.projects__item .projects__vc:hover span.projects__vc_hover:before{height:calc(50% - 1px)}@media screen and (min-width:768px){.about{padding:.3125rem 0;margin-top:-20px}}@media screen and (min-width:1024px){.about{margin-top:-25px}}@media screen and (min-width:1028px){.about{margin-top:-100px}}.about__bio{font-weight:600;line-height:30px;margin-bottom:30px;margin-top:-7px}@media screen and (min-width:700px){.about__bio{margin-bottom:50px}}.about__skills{display:flex;flex-direction:column;padding:0 5px 15px 5px}@media screen and (min-width:700px){.about__skills{flex-direction:row;justify-content:space-between}}.about__technologies{font-weight:700;text-transform:uppercase;text-align:center}.about ul{margin:-11px 0 0 0;padding:0;text-align:center}.about li{margin-bottom:15px}.contact{border-top:1px solid #f6f4f4;padding:0 5px 0 5px}@media screen and (min-width:768px){.contact{padding:.6875rem .625rem}}.contact__text-content{font-weight:600;margin-top:-10px}@media screen and (min-width:768px){.contact__text-content{margin-top:7px}}.contact__form{position:relative;padding:18px 0;margin-top:10px}.contact__field{font-family:inherit;width:100%;border:0;border-bottom:1px solid #d2d2d2;outline:0;font-size:1rem;padding:11px 0;background:0 0;transition:border-color .2s}.contact__textarea{font-family:inherit;width:100%;border:0;border-bottom:1px solid #d2d2d2;outline:0;font-size:1rem;padding:7px 0;resize:none;background:0 0;transition:border-color .2s}@media screen and (min-width:1052px){.contact__textarea{width:100%}}@media screen and (min-width:1298px){.contact__textarea{width:743px}}.contact__field::-webkit-input-placeholder,.contact__textarea::-webkit-input-placeholder{color:transparent}.contact__field::-moz-placeholder,.contact__textarea::-moz-placeholder{color:transparent}.contact__field:-ms-input-placeholder,.contact__textarea:-ms-input-placeholder{color:transparent}.contact__field::-ms-input-placeholder,.contact__textarea::-ms-input-placeholder{color:transparent}.contact__field::placeholder,.contact__textarea::placeholder{color:transparent}.contact__field:placeholder-shown~.contact__label,.contact__textarea:placeholder-shown~.contact__label{font-size:1rem;cursor:text;top:20px}.contact label,.contact__field:focus~.contact__label,.contact__textarea:focus~.contact__label{position:absolute;top:0;display:block;transition:.2s;font-size:.75rem;color:#979797}.contact__field:focus~.contact__label,.contact__textarea:focus~.contact__label{color:#000}.contact__field:focus,.contact__textarea:focus{border-bottom:1px solid #000}.contact [type=submit]{font-family:"Nunito Sans",sans-serif}@media screen and (min-width:1052px){.contact__wrapper{display:flex;justify-content:space-around}}@media screen and (min-width:1052px) and (max-width:1300px){.contact__wrapper{flex-direction:column}}@media screen and (min-width:1052px){.contact__text-content{margin-right:80px;line-height:22px}.contact__text-content p{margin-bottom:9px}}.contact__social-media{margin-bottom:5px}.contact__social-media a:nth-child(2){margin-left:11px}.footer__name{font-size:.625rem;text-align:center;font-weight:600;text-transform:uppercase}.footer__name a{color:#007fff}.footer__heart{display:inline-block;margin-bottom:-7px}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
